<?xml version="1.0" encoding="UTF-8"?>

<detailedreport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="https://www.veracode.com/schema/reports/export/1.0" xsi:schemaLocation="https://www.veracode.com/schema/reports/export/1.0 https://analysiscenter.veracode.com/resource/detailedreport.xsd" report_format_version="1.4" app_name="Apache" app_id="20394" first_build_submitted_date="2011-03-17 01:18:17 UTC" version="2.2.8" build_id="22933" submitter="Veracode" platform="Solaris" assurance_level="4" business_criticality="4" generation_date="2014-06-03 14:40:01 UTC" veracode_level="VL4" total_flaws="7" flaws_not_mitigated="7" teams="" life_cycle_stage="Deployed (In production and actively developed)" planned_deployment_date="" last_update_time="2011-03-17 10:45:46 UTC" is_latest_build="true" policy_name="Veracode Transitional High" policy_version="1" policy_compliance_status="Pass" policy_rules_status="Pass" grace_period_expired="false" scan_overdue="false" business_owner="" business_unit="Not Specified" tags="" legacy_scan_engine="false">
<static-analysis rating="A" score="99" submitted_date="2011-03-17 01:10:16 UTC" published_date="2011-03-17 10:45:44 UTC" analysis_size_bytes="16157810">
<modules>
<module name="httpd" compiler="GCC_Linux_IA32_3_4_6" os="Red Hat Enterprise Linux v4 (IA32)" architecture="IA32" loc="88255" score="0" numflawssev0="0" numflawssev1="0" numflawssev2="7" numflawssev3="0" numflawssev4="0" numflawssev5="0"/>
</modules>
</static-analysis>
<severity level="5"/>
<severity level="4"/>
<severity level="3"/>
<severity level="2">
<category categoryid="16" categoryname="Error Handling" pcirelated="false">
<desc>
<para text="Error handling problems occur when an application does not properly handle errors that occur during processing. If a function does not generate the correct return/status codes, or if the product does not handle all possible return/status codes that could be generated by a function, then security issues may result.  Similarly, failing to catch an exception thrown by a function can potentially cause the program to crash or to behave in an unexpected manner."/>
<para text="This type of problem is most often found in edge conditions that are rarely encountered during normal application use.  Presumably, most bugs related to common conditions are found and eliminated during development and testing. In some cases, the attacker can directly control or influence the environment to trigger these edge conditions."/>
</desc>
<recommendations>
<para text="Never ignore return codes, assuming that a function will always succeed.  Check for and handle all possible return codes to ensure that all scenarios are covered, including boundary or edge conditions.  Subject the application to extensive testing to discover some of the possible instances of where and how errors or return values are not handled."/>
<para text="Use a standard exception handling mechanism to be sure that the application properly handles all types of processing errors. Do not allow the application to throw errors up to the application container, generally the web application server.   "/>
</recommendations>
<cwe cweid="391" cwename="Unchecked Error Condition" pcirelated="false" certc="743" certcpp="880">
<description>
<text text="The result of this call are not captured.  Failing to check the return code can result in unexpected behavior."/>
</description>
<staticflaws>
<flaw severity="2" categoryname="Unchecked Error Condition" count="1" issueid="176" module="httpd" type="strrchr" description="The result of this call to strrchr() is not checked for success before being used. This can result in application instability or crashing if NULL is returned.

Be sure to check the result and make sure it is not NULL before use.

References: 
CWE (http://cwe.mitre.org/data/definitions/391.html)

" note="" cweid="391" remediationeffort="2" exploitLevel="-1" categoryid="16" pcirelated="false" date_first_occurrence="2011-03-17 01:07:28 UTC" remediation_status="New" cia_impact="nnp" grace_period_expires="" affects_policy_compliance="false" mitigation_status="none" mitigation_status_desc="Not Mitigated" sourcefile="config.c" line="1673" sourcefilepath="home/efeller/httpd-2.2.8/server/" scope="Global Scope" functionprototype="const char * ap_process_resource_config(server_rec /*112*/ *, const char *, ap_directive_t /*32*/ * *, apr_pool_t /*56*/ *, apr_pool_t /*56*/ *)" functionrelativelocation="25"/>
<flaw severity="2" categoryname="Unchecked Error Condition" count="1" issueid="127" module="httpd" type="strchr" description="The result of this call to strchr() is not checked for success before being used. This can result in application instability or crashing if NULL is returned.

Be sure to check the result and make sure it is not NULL before use.

References: 
CWE (http://cwe.mitre.org/data/definitions/391.html)

" note="" cweid="391" remediationeffort="2" exploitLevel="-1" categoryid="16" pcirelated="false" date_first_occurrence="2011-03-17 01:07:28 UTC" remediation_status="New" cia_impact="nnp" grace_period_expires="" affects_policy_compliance="false" mitigation_status="none" mitigation_status_desc="Not Mitigated" sourcefile="mod_negotiation.c" line="1031" sourcefilepath="home/efeller/httpd-2.2.8/modules/mappers/" scope="Global Scope" functionprototype="int read_type_map(apr_file_t /*72*/ * *, negotiation_state /*72*/ *, request_rec /*412*/ *)" functionrelativelocation="72"/>
<flaw severity="2" categoryname="Unchecked Error Condition" count="1" issueid="137" module="httpd" type="strchr" description="The result of this call to strchr() is not checked for success before being used. This can result in application instability or crashing if NULL is returned.

Be sure to check the result and make sure it is not NULL before use.

References: 
CWE (http://cwe.mitre.org/data/definitions/391.html)

" note="" cweid="391" remediationeffort="2" exploitLevel="-1" categoryid="16" pcirelated="false" date_first_occurrence="2011-03-17 01:07:28 UTC" remediation_status="New" cia_impact="nnp" grace_period_expires="" affects_policy_compliance="false" mitigation_status="none" mitigation_status_desc="Not Mitigated" sourcefile="mod_negotiation.c" line="1210" sourcefilepath="home/efeller/httpd-2.2.8/modules/mappers/" scope="Global Scope" functionprototype="int read_types_multi(negotiation_state /*72*/ *)" functionrelativelocation="45"/>
<flaw severity="2" categoryname="Unchecked Error Condition" count="1" issueid="51" module="httpd" type="malloc" description="The result of this call to malloc() is not checked for success before being used. This can result in application instability or crashing if memory is not available.

Be sure to check the result and make sure it is correct before use. Some functions return a pointer which should be validated as not NULL before use. Other functions return integers or Boolean values that must either be zero or non-zero for the results of the function to be used. Consult the API documentation to determine what a correct result is from the function call.

References: 
CWE (http://cwe.mitre.org/data/definitions/391.html) 
OWASP (http://www.owasp.org/index.php/Improper_error_handling)

" note="" cweid="391" remediationeffort="2" exploitLevel="-1" categoryid="16" pcirelated="false" date_first_occurrence="2011-03-17 01:07:28 UTC" remediation_status="New" cia_impact="nnp" grace_period_expires="" affects_policy_compliance="false" mitigation_status="none" mitigation_status_desc="Not Mitigated" sourcefile="mpm_common.c" line="91" sourcefilepath="home/efeller/httpd-2.2.8/server/" scope="Global Scope" functionprototype="void ap_register_extra_mpm_process(int)" functionrelativelocation="26"/>
<flaw severity="2" categoryname="Unchecked Error Condition" count="1" issueid="69" module="httpd" type="unlink" description="The result of this call to unlink() is not captured, so it cannot be checked for success. This can result in application instability or crashing if memory is not available.

Be sure to check the result and make sure it is correct before use. Some functions return a pointer which should be validated as not NULL before use. Other functions return integers or Boolean values that must either be zero or non-zero for the results of the function to be used. Consult the API documentation to determine what a correct result is from the function call.

References: 
CWE (http://cwe.mitre.org/data/definitions/391.html) 
OWASP (http://www.owasp.org/index.php/Improper_error_handling)

" note="" cweid="391" remediationeffort="2" exploitLevel="-1" categoryid="16" pcirelated="false" date_first_occurrence="2011-03-17 01:07:28 UTC" remediation_status="New" cia_impact="nnp" grace_period_expires="" affects_policy_compliance="false" mitigation_status="none" mitigation_status_desc="Not Mitigated" sourcefile="open.c" line="36" sourcefilepath="file_io/unix/" scope="Global Scope" functionprototype="int file_cleanup(apr_file_t /*72*/ *)" functionrelativelocation="59"/>
<flaw severity="2" categoryname="Unchecked Error Condition" count="1" issueid="42" module="httpd" type="calloc" description="The result of this call to calloc() is not checked for success before being used. This can result in application instability or crashing if memory is not available.

Be sure to check the result and make sure it is correct before use. Some functions return a pointer which should be validated as not NULL before use. Other functions return integers or Boolean values that must either be zero or non-zero for the results of the function to be used. Consult the API documentation to determine what a correct result is from the function call.

References: 
CWE (http://cwe.mitre.org/data/definitions/391.html) 
OWASP (http://www.owasp.org/index.php/Improper_error_handling)

" note="" cweid="391" remediationeffort="2" exploitLevel="-1" categoryid="16" pcirelated="false" date_first_occurrence="2011-03-17 01:07:28 UTC" remediation_status="New" cia_impact="nnp" grace_period_expires="" affects_policy_compliance="false" mitigation_status="none" mitigation_status_desc="Not Mitigated" sourcefile="scoreboard.c" line="120" sourcefilepath="home/efeller/httpd-2.2.8/server/" scope="Global Scope" functionprototype="void ap_init_scoreboard(void *)" functionrelativelocation="15"/>
<flaw severity="2" categoryname="Unchecked Error Condition" count="1" issueid="39" module="httpd" type="strchr" description="The result of this call to strchr() is not checked for success before being used. This can result in application instability or crashing if NULL is returned.

Be sure to check the result and make sure it is not NULL before use.

References: 
CWE (http://cwe.mitre.org/data/definitions/391.html)

" note="" cweid="391" remediationeffort="2" exploitLevel="-1" categoryid="16" pcirelated="false" date_first_occurrence="2011-03-17 01:07:28 UTC" remediation_status="New" cia_impact="nnp" grace_period_expires="" affects_policy_compliance="false" mitigation_status="none" mitigation_status_desc="Not Mitigated" sourcefile="util_script.c" line="683" sourcefilepath="home/efeller/httpd-2.2.8/server/" scope="Global Scope" functionprototype="int getsfunc_STRING(char *, int, void *)" functionrelativelocation="39"/>
</staticflaws>
</cwe>
</category>
</severity>
<severity level="1"/>
<severity level="0"/>
<flaw-status new="7" reopen="0" open="0" fixed="0" total="7" not_mitigated="7" sev-1-change="0" sev-2-change="7" sev-3-change="0" sev-4-change="0" sev-5-change="0"/>
</detailedreport>
